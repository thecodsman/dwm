!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Man	S,subsection	/sub sections/
!_TAG_KIND_DESCRIPTION!Man	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Man	t,title	/titles/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Man	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/cody/.local/src/dwm/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
${OBJ}	Makefile	/^${OBJ}: config.h config.mk$/;"	t
.c.o	Makefile	/^.c.o:$/;"	t
ALTERNATIVE_TAGS	patch/bar_tagicons.h	/^	ALTERNATIVE_TAGS,$/;"	e	enum:__anon292629060103
ALT_TAGS_DECORATION	patch/bar_tagicons.h	/^	ALT_TAGS_DECORATION,$/;"	e	enum:__anon292629060103
Arg	def.dwm.c	/^} Arg;$/;"	t	typeref:union:__anonc707d71b060a	file:
Arg	dwm.c	/^} Arg;$/;"	t	typeref:union:__anon0f53a99e070a	file:
BARRULES	dwm.c	/^#define BARRULES /;"	d	file:
BAR_ALIGN_CENTER	dwm.c	/^	BAR_ALIGN_CENTER,$/;"	e	enum:__anon0f53a99e0603	file:
BAR_ALIGN_LAST	dwm.c	/^	BAR_ALIGN_LAST$/;"	e	enum:__anon0f53a99e0603	file:
BAR_ALIGN_LEFT	dwm.c	/^	BAR_ALIGN_LEFT,$/;"	e	enum:__anon0f53a99e0603	file:
BAR_ALIGN_LEFT_CENTER	dwm.c	/^	BAR_ALIGN_LEFT_CENTER,$/;"	e	enum:__anon0f53a99e0603	file:
BAR_ALIGN_LEFT_LEFT	dwm.c	/^	BAR_ALIGN_LEFT_LEFT,$/;"	e	enum:__anon0f53a99e0603	file:
BAR_ALIGN_LEFT_RIGHT	dwm.c	/^	BAR_ALIGN_LEFT_RIGHT,$/;"	e	enum:__anon0f53a99e0603	file:
BAR_ALIGN_NONE	dwm.c	/^	BAR_ALIGN_NONE,$/;"	e	enum:__anon0f53a99e0603	file:
BAR_ALIGN_RIGHT	dwm.c	/^	BAR_ALIGN_RIGHT,$/;"	e	enum:__anon0f53a99e0603	file:
BAR_ALIGN_RIGHT_CENTER	dwm.c	/^	BAR_ALIGN_RIGHT_CENTER,$/;"	e	enum:__anon0f53a99e0603	file:
BAR_ALIGN_RIGHT_LEFT	dwm.c	/^	BAR_ALIGN_RIGHT_LEFT,$/;"	e	enum:__anon0f53a99e0603	file:
BAR_ALIGN_RIGHT_RIGHT	dwm.c	/^	BAR_ALIGN_RIGHT_RIGHT,$/;"	e	enum:__anon0f53a99e0603	file:
BETWEEN	util.h	/^#define BETWEEN(/;"	d
BROWSER	config.h	/^#define BROWSER /;"	d
BUGS	dwm.1	/^.SH BUGS$/;"	s	title:DWM
BUTTONMASK	def.dwm.c	/^#define BUTTONMASK /;"	d	file:
BUTTONMASK	dwm.c	/^#define BUTTONMASK /;"	d	file:
Bar	dwm.c	/^struct Bar {$/;"	s	file:
Bar	dwm.c	/^typedef struct Bar Bar;$/;"	t	typeref:struct:Bar	file:
BarArg	dwm.c	/^} BarArg;$/;"	t	typeref:struct:__anon0f53a99e0808	file:
BarRule	dwm.c	/^} BarRule;$/;"	t	typeref:struct:__anon0f53a99e0908	file:
Button	def.dwm.c	/^} Button;$/;"	t	typeref:struct:__anonc707d71b0708	file:
Button	dwm.c	/^} Button;$/;"	t	typeref:struct:__anon0f53a99e0a08	file:
Button6	dwm.c	/^#define Button6 /;"	d	file:
Button7	dwm.c	/^#define Button7 /;"	d	file:
Button8	dwm.c	/^#define Button8 /;"	d	file:
Button9	dwm.c	/^#define Button9 /;"	d	file:
CC	config.mk	/^CC = cc$/;"	m
CENTERED	dwm.c	/^#define CENTERED$/;"	d	file:
CFLAGS	config.mk	/^CFLAGS   = -std=c99 -pedantic -Wall -Wno-unused-function -Wno-deprecated-declarations -Os ${INCS/;"	m
CLEANMASK	def.dwm.c	/^#define CLEANMASK(/;"	d	file:
CLEANMASK	dwm.c	/^#define CLEANMASK(/;"	d	file:
CPPFLAGS	config.mk	/^CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_XOPEN_SOURCE=700L -DVERSION=\\"${VERSION}\\" ${XIN/;"	m
CUSTOMIZATION	dwm.1	/^.SH CUSTOMIZATION$/;"	s	title:DWM
Client	def.dwm.c	/^struct Client {$/;"	s	file:
Client	def.dwm.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
Client	dwm.c	/^struct Client {$/;"	s	file:
Client	dwm.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
ClkClientWin	def.dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anonc707d71b0503	file:
ClkClientWin	dwm.c	/^	ClkClientWin,$/;"	e	enum:__anon0f53a99e0503	file:
ClkLast	def.dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anonc707d71b0503	file:
ClkLast	dwm.c	/^	ClkLast$/;"	e	enum:__anon0f53a99e0503	file:
ClkLtSymbol	def.dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anonc707d71b0503	file:
ClkLtSymbol	dwm.c	/^	ClkLtSymbol,$/;"	e	enum:__anon0f53a99e0503	file:
ClkRootWin	def.dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anonc707d71b0503	file:
ClkRootWin	dwm.c	/^	ClkRootWin,$/;"	e	enum:__anon0f53a99e0503	file:
ClkStatusText	def.dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anonc707d71b0503	file:
ClkStatusText	dwm.c	/^	ClkStatusText,$/;"	e	enum:__anon0f53a99e0503	file:
ClkTagBar	def.dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anonc707d71b0503	file:
ClkTagBar	dwm.c	/^	ClkTagBar,$/;"	e	enum:__anon0f53a99e0503	file:
ClkWinTitle	def.dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anonc707d71b0503	file:
ClkWinTitle	dwm.c	/^	ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
Clr	drw.h	/^typedef XftColor Clr;$/;"	t	typeref:typename:XftColor
ColBg	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColBorder	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColCount	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColFg	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColFloat	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
Cur	drw.h	/^} Cur;$/;"	t	typeref:struct:__anon0f5116480108
CurLast	def.dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anonc707d71b0103	file:
CurLast	dwm.c	/^	CurLast$/;"	e	enum:__anon0f53a99e0103	file:
CurMove	def.dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anonc707d71b0103	file:
CurMove	dwm.c	/^	CurMove,$/;"	e	enum:__anon0f53a99e0103	file:
CurNormal	def.dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anonc707d71b0103	file:
CurNormal	dwm.c	/^	CurNormal,$/;"	e	enum:__anon0f53a99e0103	file:
CurResize	def.dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anonc707d71b0103	file:
CurResize	dwm.c	/^	CurResize,$/;"	e	enum:__anon0f53a99e0103	file:
DEBUG	util.h	/^#define DEBUG(/;"	d
DEFAULT_SOCKET_PATH	patch/ipc/dwm-msg.c	/^const char *DEFAULT_SOCKET_PATH = "\/tmp\/dwm.sock";$/;"	v	typeref:typename:const char *
DEFAULT_TAGS	patch/bar_tagicons.h	/^	DEFAULT_TAGS,$/;"	e	enum:__anon292629060103
DESCRIPTION	dwm.1	/^.SH DESCRIPTION$/;"	s	title:DWM
DWM	dwm.1	/^.TH DWM 1 dwm\\-VERSION$/;"	t
Drw	drw.h	/^} Drw;$/;"	t	typeref:struct:__anon0f5116480308
FAKEFULLSCREEN	dwm.c	/^#define FAKEFULLSCREEN$/;"	d	file:
FLOAT	def.dwm.c	/^	FLOAT = 2$/;"	e	enum:resource_type	file:
FLOATING	dwm.c	/^#define FLOATING /;"	d	file:
FREETYPEINC	config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPELIBS	config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
Fnt	drw.h	/^typedef struct Fnt {$/;"	s
Fnt	drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
GETINC	def.dwm.c	/^#define GETINC(/;"	d	file:
HEIGHT	def.dwm.c	/^#define HEIGHT(/;"	d	file:
HEIGHT	dwm.c	/^#define HEIGHT(/;"	d	file:
HIDDEN	dwm.c	/^#define HIDDEN(/;"	d	file:
INC	def.dwm.c	/^#define INC(/;"	d	file:
INCS	config.mk	/^INCS = -I${X11INC} -I${FREETYPEINC} ${YAJLINC} ${PANGOINC} ${BDINC}$/;"	m
INDICATOR_BOTTOM_BAR	patch/bar_indicators.h	/^	INDICATOR_BOTTOM_BAR,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_BOTTOM_BAR_SLIM	patch/bar_indicators.h	/^	INDICATOR_BOTTOM_BAR_SLIM,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_BOX	patch/bar_indicators.h	/^	INDICATOR_BOX,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_BOX_FULL	patch/bar_indicators.h	/^	INDICATOR_BOX_FULL,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_BOX_WIDER	patch/bar_indicators.h	/^	INDICATOR_BOX_WIDER,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_CLIENT_DOTS	patch/bar_indicators.h	/^	INDICATOR_CLIENT_DOTS,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_NONE	patch/bar_indicators.h	/^	INDICATOR_NONE,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_PLUS	patch/bar_indicators.h	/^	INDICATOR_PLUS,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_PLUS_AND_LARGER_SQUARE	patch/bar_indicators.h	/^	INDICATOR_PLUS_AND_LARGER_SQUARE,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_PLUS_AND_SQUARE	patch/bar_indicators.h	/^	INDICATOR_PLUS_AND_SQUARE,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_RIGHT_TAGS	patch/bar_indicators.h	/^	INDICATOR_RIGHT_TAGS,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_TOP_BAR	patch/bar_indicators.h	/^	INDICATOR_TOP_BAR,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_TOP_BAR_SLIM	patch/bar_indicators.h	/^	INDICATOR_TOP_BAR_SLIM,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_TOP_LEFT_LARGER_SQUARE	patch/bar_indicators.h	/^	INDICATOR_TOP_LEFT_LARGER_SQUARE,$/;"	e	enum:__anon82a1be5e0103
INDICATOR_TOP_LEFT_SQUARE	patch/bar_indicators.h	/^	INDICATOR_TOP_LEFT_SQUARE,$/;"	e	enum:__anon82a1be5e0103
INTEGER	def.dwm.c	/^	INTEGER = 1,$/;"	e	enum:resource_type	file:
INTERSECT	def.dwm.c	/^#define INTERSECT(/;"	d	file:
INTERSECT	dwm.c	/^#define INTERSECT(/;"	d	file:
IPCClient	patch/ipc/IPCClient.h	/^struct IPCClient {$/;"	s
IPCClient	patch/ipc/IPCClient.h	/^typedef struct IPCClient IPCClient;$/;"	t	typeref:struct:IPCClient
IPCClientList	patch/ipc/IPCClient.h	/^typedef IPCClient *IPCClientList;$/;"	t	typeref:typename:IPCClient *
IPCMessageType	patch/ipc/dwm-msg.c	/^typedef enum IPCMessageType {$/;"	g	file:
IPCMessageType	patch/ipc/dwm-msg.c	/^} IPCMessageType;$/;"	t	typeref:enum:IPCMessageType	file:
IPC_CLIENT_H_	patch/ipc/IPCClient.h	/^#define IPC_CLIENT_H_$/;"	d
IPC_EVENT_CLIENT_FOCUS_CHANGE	patch/ipc/dwm-msg.c	/^#define IPC_EVENT_CLIENT_FOCUS_CHANGE /;"	d	file:
IPC_EVENT_FOCUSED_STATE_CHANGE	patch/ipc/dwm-msg.c	/^#define IPC_EVENT_FOCUSED_STATE_CHANGE /;"	d	file:
IPC_EVENT_FOCUSED_TITLE_CHANGE	patch/ipc/dwm-msg.c	/^#define IPC_EVENT_FOCUSED_TITLE_CHANGE /;"	d	file:
IPC_EVENT_LAYOUT_CHANGE	patch/ipc/dwm-msg.c	/^#define IPC_EVENT_LAYOUT_CHANGE /;"	d	file:
IPC_EVENT_MONITOR_FOCUS_CHANGE	patch/ipc/dwm-msg.c	/^#define IPC_EVENT_MONITOR_FOCUS_CHANGE /;"	d	file:
IPC_EVENT_TAG_CHANGE	patch/ipc/dwm-msg.c	/^#define IPC_EVENT_TAG_CHANGE /;"	d	file:
IPC_MAGIC	patch/ipc/dwm-msg.c	/^#define IPC_MAGIC /;"	d	file:
IPC_MAGIC_ARR	patch/ipc/dwm-msg.c	/^#define IPC_MAGIC_ARR /;"	d	file:
IPC_MAGIC_LEN	patch/ipc/dwm-msg.c	/^#define IPC_MAGIC_LEN /;"	d	file:
IPC_TYPE_EVENT	patch/ipc/dwm-msg.c	/^  IPC_TYPE_EVENT = 6$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_DWM_CLIENT	patch/ipc/dwm-msg.c	/^  IPC_TYPE_GET_DWM_CLIENT = 4,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_LAYOUTS	patch/ipc/dwm-msg.c	/^  IPC_TYPE_GET_LAYOUTS = 3,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_MONITORS	patch/ipc/dwm-msg.c	/^  IPC_TYPE_GET_MONITORS = 1,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_GET_TAGS	patch/ipc/dwm-msg.c	/^  IPC_TYPE_GET_TAGS = 2,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_RUN_COMMAND	patch/ipc/dwm-msg.c	/^  IPC_TYPE_RUN_COMMAND = 0,$/;"	e	enum:IPCMessageType	file:
IPC_TYPE_SUBSCRIBE	patch/ipc/dwm-msg.c	/^  IPC_TYPE_SUBSCRIBE = 5,$/;"	e	enum:IPCMessageType	file:
ISINC	def.dwm.c	/^#define ISINC(/;"	d	file:
ISSUES	dwm.1	/^.SH ISSUES$/;"	s	title:DWM
ISVISIBLE	def.dwm.c	/^#define ISVISIBLE(/;"	d	file:
ISVISIBLE	dwm.c	/^#define ISVISIBLE(/;"	d	file:
Key	def.dwm.c	/^} Key;$/;"	t	typeref:struct:__anonc707d71b0808	file:
Key	dwm.c	/^} Key;$/;"	t	typeref:struct:__anon0f53a99e0b08	file:
Keyboard commands	dwm.1	/^.SS Keyboard commands$/;"	S	section:DWM""USAGE
LDFLAGS	config.mk	/^LDFLAGS  = ${LIBS}$/;"	m
LENGTH	def.dwm.c	/^#define LENGTH(/;"	d	file:
LENGTH	dwm.c	/^#define LENGTH(/;"	d	file:
LIBS	config.mk	/^LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS}  ${XRENDER} ${MPDCLIENT} ${XEXTLIB} ${X/;"	m
Layout	def.dwm.c	/^} Layout;$/;"	t	typeref:struct:__anonc707d71b0908	file:
Layout	dwm.c	/^} Layout;$/;"	t	typeref:struct:__anon0f53a99e0c08	file:
MANPREFIX	config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MAX	util.h	/^#define MAX(/;"	d
MIN	util.h	/^#define MIN(/;"	d
MOD	def.dwm.c	/^#define MOD(/;"	d	file:
MODKEY	config.def.h	/^#define MODKEY /;"	d
MODKEY	config.h	/^#define MODKEY /;"	d
MOUSEMASK	def.dwm.c	/^#define MOUSEMASK /;"	d	file:
MOUSEMASK	dwm.c	/^#define MOUSEMASK /;"	d	file:
Monitor	def.dwm.c	/^struct Monitor {$/;"	s	file:
Monitor	def.dwm.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
Monitor	dwm.c	/^struct Monitor {$/;"	s	file:
Monitor	dwm.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
Mouse commands	dwm.1	/^.SS Mouse commands$/;"	S	section:DWM""USAGE
NAME	dwm.1	/^.SH NAME$/;"	s	title:DWM
NOSWALLOW	dwm.c	/^#define NOSWALLOW /;"	d	file:
NUMTAGS	def.dwm.c	/^#define NUMTAGS	/;"	d	file:
NUMTAGS	dwm.c	/^#define NUMTAGS /;"	d	file:
NUMVIEWHIST	dwm.c	/^#define NUMVIEWHIST /;"	d	file:
NetActiveWindow	def.dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anonc707d71b0303	file:
NetActiveWindow	dwm.c	/^	NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetClientInfo	def.dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetClientInfo, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anonc707d71b0303	file:
NetClientList	def.dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetClientInfo, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anonc707d71b0303	file:
NetClientList	dwm.c	/^	NetClientList,$/;"	e	enum:__anon0f53a99e0303	file:
NetLast	def.dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetClientInfo, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anonc707d71b0303	file:
NetLast	dwm.c	/^	NetLast$/;"	e	enum:__anon0f53a99e0303	file:
NetSupported	def.dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anonc707d71b0303	file:
NetSupported	dwm.c	/^	NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMCheck	def.dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anonc707d71b0303	file:
NetWMCheck	dwm.c	/^	NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMFullscreen	def.dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anonc707d71b0303	file:
NetWMFullscreen	dwm.c	/^	NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMName	def.dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anonc707d71b0303	file:
NetWMName	dwm.c	/^	NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMState	def.dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anonc707d71b0303	file:
NetWMState	dwm.c	/^	NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMWindowType	def.dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anonc707d71b0303	file:
NetWMWindowType	dwm.c	/^	NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMWindowTypeDialog	def.dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetClientInfo, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anonc707d71b0303	file:
NumTags	def.dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	s	file:
NumTags	dwm.c	/^struct NumTags { char limitexceeded[NUMTAGS > 31 ? -1 : 1]; };$/;"	s	file:
OBJ	Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
OPTIONS	dwm.1	/^.SH OPTIONS$/;"	s	title:DWM
PERMANENT	dwm.c	/^#define PERMANENT$/;"	d	file:
PREFIX	config.mk	/^PREFIX = \/usr\/local$/;"	m
PREVSEL	def.dwm.c	/^#define PREVSEL /;"	d	file:
Pertag	dwm.c	/^typedef struct Pertag Pertag;$/;"	t	typeref:struct:Pertag	file:
Pertag	patch/pertag.c	/^struct Pertag {$/;"	s	file:
RULE	dwm.c	/^#define RULE(/;"	d	file:
ResourcePref	def.dwm.c	/^} ResourcePref;$/;"	t	typeref:struct:__anonc707d71b0b08	file:
Rule	def.dwm.c	/^} Rule;$/;"	t	typeref:struct:__anonc707d71b0a08	file:
Rule	dwm.c	/^} Rule;$/;"	t	typeref:struct:__anon0f53a99e0d08	file:
SEE ALSO	dwm.1	/^.SH SEE ALSO$/;"	s	title:DWM
SHCMD	config.def.h	/^#define SHCMD(/;"	d
SHCMD	config.h	/^#define SHCMD(/;"	d
SIGNALS	dwm.1	/^.SH SIGNALS$/;"	s	title:DWM
SPTAG	def.dwm.c	/^#define SPTAG(/;"	d	file:
SPTAGMASK	def.dwm.c	/^#define SPTAGMASK	/;"	d	file:
SRC	Makefile	/^SRC = drw.c dwm.c util.c$/;"	m
STATUSBAR	config.def.h	/^#define STATUSBAR /;"	d
STATUSBAR	config.h	/^#define STATUSBAR /;"	d
STRING	def.dwm.c	/^	STRING = 0,$/;"	e	enum:resource_type	file:
SWITCHTAG	dwm.c	/^#define SWITCHTAG$/;"	d	file:
SYNOPSIS	dwm.1	/^.SH SYNOPSIS$/;"	s	title:DWM
SchemeHidNorm	dwm.c	/^	SchemeHidNorm,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeHidSel	dwm.c	/^	SchemeHidSel,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeNorm	def.dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anonc707d71b0203	file:
SchemeNorm	dwm.c	/^	SchemeNorm,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeSel	def.dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anonc707d71b0203	file:
SchemeSel	dwm.c	/^	SchemeSel,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeTagsNorm	dwm.c	/^	SchemeTagsNorm,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeTagsSel	dwm.c	/^	SchemeTagsSel,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeTitleNorm	dwm.c	/^	SchemeTitleNorm,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeTitleSel	dwm.c	/^	SchemeTitleSel,$/;"	e	enum:__anon0f53a99e0203	file:
SchemeUrg	dwm.c	/^	SchemeUrg,$/;"	e	enum:__anon0f53a99e0203	file:
Status bar	dwm.1	/^.SS Status bar$/;"	S	section:DWM""USAGE
StatusCmd	patch/bar_statuscmd.h	/^} StatusCmd;$/;"	t	typeref:struct:__anonf36448860108
TAGKEYS	config.def.h	/^#define TAGKEYS(/;"	d
TAGKEYS	config.h	/^#define TAGKEYS(/;"	d
TAGMASK	def.dwm.c	/^#define TAGMASK	/;"	d	file:
TAGMASK	dwm.c	/^#define TAGMASK /;"	d	file:
TAGSINDICATOR	patch/bar_indicators.c	/^#define TAGSINDICATOR /;"	d	file:
TAGSPX	patch/bar_indicators.c	/^#define TAGSPX /;"	d	file:
TAGSROWS	patch/bar_indicators.c	/^#define TAGSROWS /;"	d	file:
TERMCLASS	config.h	/^#define TERMCLASS /;"	d
TERMINAL	config.h	/^#define TERMINAL /;"	d
TEXTW	def.dwm.c	/^#define TEXTW(/;"	d	file:
TEXTW	dwm.c	/^#define TEXTW(/;"	d	file:
TEXTWM	dwm.c	/^#define TEXTWM(/;"	d	file:
TRUNC	def.dwm.c	/^#define TRUNC(/;"	d	file:
USAGE	dwm.1	/^.SH USAGE$/;"	s	title:DWM
UTF_INVALID	drw.c	/^#define UTF_INVALID /;"	d	file:
UTF_SIZ	drw.c	/^#define UTF_SIZ /;"	d	file:
VERSION	config.mk	/^VERSION = 6.5$/;"	m
WIDTH	def.dwm.c	/^#define WIDTH(/;"	d	file:
WIDTH	dwm.c	/^#define WIDTH(/;"	d	file:
WMDelete	def.dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anonc707d71b0403	file:
WMDelete	dwm.c	/^	WMDelete,$/;"	e	enum:__anon0f53a99e0403	file:
WMLast	def.dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anonc707d71b0403	file:
WMLast	dwm.c	/^	WMLast$/;"	e	enum:__anon0f53a99e0403	file:
WMProtocols	def.dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anonc707d71b0403	file:
WMProtocols	dwm.c	/^	WMProtocols,$/;"	e	enum:__anon0f53a99e0403	file:
WMState	def.dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anonc707d71b0403	file:
WMState	dwm.c	/^	WMState,$/;"	e	enum:__anon0f53a99e0403	file:
WMTakeFocus	def.dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anonc707d71b0403	file:
WMTakeFocus	dwm.c	/^	WMTakeFocus,$/;"	e	enum:__anon0f53a99e0403	file:
WTYPE	dwm.c	/^#define WTYPE /;"	d	file:
Window	patch/ipc/dwm-msg.c	/^typedef unsigned long Window;$/;"	t	typeref:typename:unsigned long	file:
X11INC	config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11LIB	config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
XCBLIBS	config.mk	/^XCBLIBS = -lX11-xcb -lxcb -lxcb-res$/;"	m
XINERAMAFLAGS	config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMALIBS	config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
XRDB_LOAD_COLOR	patch/xrdb.h	/^#define XRDB_LOAD_COLOR(/;"	d
YAJL_DUMPS_H_	patch/ipc/yajl_dumps.h	/^#define YAJL_DUMPS_H_$/;"	d
YARR	patch/ipc/dwm-msg.c	/^#define YARR(/;"	d	file:
YARR	patch/ipc/yajl_dumps.h	/^#define YARR(/;"	d
YBOOL	patch/ipc/dwm-msg.c	/^#define YBOOL(/;"	d	file:
YBOOL	patch/ipc/yajl_dumps.h	/^#define YBOOL(/;"	d
YDOUBLE	patch/ipc/dwm-msg.c	/^#define YDOUBLE(/;"	d	file:
YDOUBLE	patch/ipc/yajl_dumps.h	/^#define YDOUBLE(/;"	d
YINT	patch/ipc/dwm-msg.c	/^#define YINT(/;"	d	file:
YINT	patch/ipc/yajl_dumps.h	/^#define YINT(/;"	d
YMAP	patch/ipc/dwm-msg.c	/^#define YMAP(/;"	d	file:
YMAP	patch/ipc/yajl_dumps.h	/^#define YMAP(/;"	d
YNULL	patch/ipc/dwm-msg.c	/^#define YNULL(/;"	d	file:
YNULL	patch/ipc/yajl_dumps.h	/^#define YNULL(/;"	d
YSTR	patch/ipc/dwm-msg.c	/^#define YSTR(/;"	d	file:
YSTR	patch/ipc/yajl_dumps.h	/^#define YSTR(/;"	d
__anon0f5116480108	drw.h	/^typedef struct {$/;"	s
__anon0f5116480203	drw.h	/^enum { ColFg, ColBg, ColBorder, ColFloat, ColCount }; \/* Clr scheme index *\/$/;"	g
__anon0f5116480308	drw.h	/^typedef struct {$/;"	s
__anon0f53a99e0103	dwm.c	/^enum {$/;"	g	file:
__anon0f53a99e0203	dwm.c	/^enum {$/;"	g	file:
__anon0f53a99e0303	dwm.c	/^enum {$/;"	g	file:
__anon0f53a99e0403	dwm.c	/^enum {$/;"	g	file:
__anon0f53a99e0503	dwm.c	/^enum {$/;"	g	file:
__anon0f53a99e0603	dwm.c	/^enum {$/;"	g	file:
__anon0f53a99e070a	dwm.c	/^typedef union {$/;"	u	file:
__anon0f53a99e0808	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0908	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0a08	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0b08	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0c08	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0d08	dwm.c	/^typedef struct {$/;"	s	file:
__anon292629060103	patch/bar_tagicons.h	/^enum {$/;"	g
__anon82a1be5e0103	patch/bar_indicators.h	/^enum {$/;"	g
__anonc707d71b0103	def.dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	g	file:
__anonc707d71b0203	def.dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	g	file:
__anonc707d71b0303	def.dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	g	file:
__anonc707d71b0403	def.dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	g	file:
__anonc707d71b0503	def.dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	g	file:
__anonc707d71b060a	def.dwm.c	/^typedef union {$/;"	u	file:
__anonc707d71b0708	def.dwm.c	/^typedef struct {$/;"	s	file:
__anonc707d71b0808	def.dwm.c	/^typedef struct {$/;"	s	file:
__anonc707d71b0908	def.dwm.c	/^typedef struct {$/;"	s	file:
__anonc707d71b0a08	def.dwm.c	/^typedef struct {$/;"	s	file:
__anonc707d71b0b08	def.dwm.c	/^typedef struct {$/;"	s	file:
__anonf36448860108	patch/bar_statuscmd.h	/^typedef struct {$/;"	s
alignment	dwm.c	/^	int alignment; \/\/ see bar alignment enum$/;"	m	struct:__anon0f53a99e0908	typeref:typename:int	file:
all	Makefile	/^all: dwm dwm-msg$/;"	t
all	Makefile	/^all: dwm$/;"	t
applyrules	def.dwm.c	/^applyrules(Client *c)$/;"	f	typeref:typename:void
applyrules	dwm.c	/^applyrules(Client *c)$/;"	f	typeref:typename:void
applysizehints	def.dwm.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int
applysizehints	dwm.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int
arg	def.dwm.c	/^	const Arg arg;$/;"	m	struct:__anonc707d71b0708	typeref:typename:const Arg	file:
arg	def.dwm.c	/^	const Arg arg;$/;"	m	struct:__anonc707d71b0808	typeref:typename:const Arg	file:
arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const Arg	file:
arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:const Arg	file:
arrange	def.dwm.c	/^	void (*arrange)(Monitor *);$/;"	m	struct:__anonc707d71b0908	typeref:typename:void (*)(Monitor *)	file:
arrange	def.dwm.c	/^arrange(Monitor *m)$/;"	f	typeref:typename:void
arrange	dwm.c	/^	void (*arrange)(Monitor *);$/;"	m	struct:__anon0f53a99e0c08	typeref:typename:void (*)(Monitor *)	file:
arrange	dwm.c	/^arrange(Monitor *m)$/;"	f	typeref:typename:void
arrangemon	def.dwm.c	/^arrangemon(Monitor *m)$/;"	f	typeref:typename:void
arrangemon	dwm.c	/^arrangemon(Monitor *m)$/;"	f	typeref:typename:void
attach	def.dwm.c	/^attach(Client *c)$/;"	f	typeref:typename:void
attach	dwm.c	/^attach(Client *c)$/;"	f	typeref:typename:void
attachstack	def.dwm.c	/^attachstack(Client *c)$/;"	f	typeref:typename:void
attachstack	dwm.c	/^attachstack(Client *c)$/;"	f	typeref:typename:void
bar	dwm.c	/^	Bar *bar;$/;"	m	struct:Monitor	typeref:typename:Bar *	file:
bar	dwm.c	/^	int bar;$/;"	m	struct:__anon0f53a99e0908	typeref:typename:int	file:
barhover	patch/bar.c	/^barhover(XEvent *e, Bar *bar)$/;"	f	typeref:typename:void
barrules	config.def.h	/^static const BarRule barrules[] = {$/;"	v	typeref:typename:const BarRule[]
barrules	config.h	/^static const BarRule barrules[] = {$/;"	v	typeref:typename:const BarRule[]
barwin	def.dwm.c	/^	Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:
baseh	def.dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
baseh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
basew	def.dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
basew	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
bh	def.dwm.c	/^static int bh;               \/* bar height *\/$/;"	v	typeref:typename:int	file:
bh	dwm.c	/^	int bx, by, bw, bh; \/* bar geometry *\/$/;"	m	struct:Bar	typeref:typename:int	file:
bh	dwm.c	/^static int bh;               \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
borderpx	config.def.h	/^static const unsigned int borderpx       = 1;   \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
borderpx	config.h	/^static const unsigned int borderpx       = 3;   \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
borderpx	dwm.c	/^	int borderpx;$/;"	m	struct:Bar	typeref:typename:int	file:
borderscheme	dwm.c	/^	int borderscheme;$/;"	m	struct:Bar	typeref:typename:int	file:
broken	def.dwm.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
broken	dwm.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
bstack	patch/layout_bstack.c	/^bstack(Monitor *m)$/;"	f	typeref:typename:void	file:
bstack	vanitygaps.c	/^bstack(Monitor *m)$/;"	f	typeref:typename:void	file:
bstackhoriz	patch/layout_bstackhoriz.c	/^bstackhoriz(Monitor *m)$/;"	f	typeref:typename:void	file:
buffer	patch/ipc/IPCClient.h	/^  char *buffer;$/;"	m	struct:IPCClient	typeref:typename:char *
buffer_size	patch/ipc/IPCClient.h	/^  uint32_t buffer_size;$/;"	m	struct:IPCClient	typeref:typename:uint32_t
button	def.dwm.c	/^	unsigned int button;$/;"	m	struct:__anonc707d71b0708	typeref:typename:unsigned int	file:
button	dwm.c	/^	unsigned int button;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:unsigned int	file:
buttonpress	def.dwm.c	/^buttonpress(XEvent *e)$/;"	f	typeref:typename:void
buttonpress	dwm.c	/^buttonpress(XEvent *e)$/;"	f	typeref:typename:void
buttons	config.def.h	/^static const Button buttons[] = {$/;"	v	typeref:typename:const Button[]
buttons	config.h	/^static const Button buttons[] = {$/;"	v	typeref:typename:const Button[]
bw	def.dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
bw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
bw	dwm.c	/^	int bx, by, bw, bh; \/* bar geometry *\/$/;"	m	struct:Bar	typeref:typename:int	file:
bx	dwm.c	/^	int bx, by, bw, bh; \/* bar geometry *\/$/;"	m	struct:Bar	typeref:typename:int	file:
by	def.dwm.c	/^	int by;               \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
by	dwm.c	/^	int bx, by, bw, bh; \/* bar geometry *\/$/;"	m	struct:Bar	typeref:typename:int	file:
c000000	config.def.h	/^static char c000000[]                    = "#000000"; \/\/ placeholder value$/;"	v	typeref:typename:char[]
c000000	config.h	/^static char c000000[]                    = "#000000"; \/\/ placeholder value$/;"	v	typeref:typename:char[]
centeredfloatingmaster	patch/layout_centeredfloatingmaster.c	/^centeredfloatingmaster(Monitor *m)$/;"	f	typeref:typename:void
centeredfloatingmaster	vanitygaps.c	/^centeredfloatingmaster(Monitor *m)$/;"	f	typeref:typename:void
centeredmaster	patch/layout_centeredmaster.c	/^centeredmaster(Monitor *m)$/;"	f	typeref:typename:void
centeredmaster	vanitygaps.c	/^centeredmaster(Monitor *m)$/;"	f	typeref:typename:void
checkotherwm	def.dwm.c	/^checkotherwm(void)$/;"	f	typeref:typename:void
checkotherwm	dwm.c	/^checkotherwm(void)$/;"	f	typeref:typename:void
class	def.dwm.c	/^	const char *class;$/;"	m	struct:__anonc707d71b0a08	typeref:typename:const char *	file:
class	dwm.c	/^	const char *class;$/;"	m	struct:__anon0f53a99e0d08	typeref:typename:const char *	file:
clean	Makefile	/^clean:$/;"	t
cleanup	def.dwm.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanup	dwm.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanupmon	def.dwm.c	/^cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void
cleanupmon	dwm.c	/^cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void
click	def.dwm.c	/^	unsigned int click;$/;"	m	struct:__anonc707d71b0708	typeref:typename:unsigned int	file:
click	dwm.c	/^	unsigned int click;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:unsigned int	file:
click_ltsymbol	patch/bar_ltsymbol.c	/^click_ltsymbol(Bar *bar, Arg *arg, BarArg *a)$/;"	f	typeref:typename:int
click_status	patch/bar_status.c	/^click_status(Bar *bar, Arg *arg, BarArg *a)$/;"	f	typeref:typename:int
click_statuscmd	patch/bar_statuscmd.c	/^click_statuscmd(Bar *bar, Arg *arg, BarArg *a)$/;"	f	typeref:typename:int
click_statuscmd_es	patch/bar_statuscmd.c	/^click_statuscmd_es(Bar *bar, Arg *arg, BarArg *a)$/;"	f	typeref:typename:int
click_statuscmd_text	patch/bar_statuscmd.c	/^click_statuscmd_text(Arg *arg, int rel_x, char *text)$/;"	f	typeref:typename:int
click_tags	patch/bar_tags.c	/^click_tags(Bar *bar, Arg *arg, BarArg *a)$/;"	f	typeref:typename:int
click_wintitle	patch/bar_wintitle.c	/^click_wintitle(Bar *bar, Arg *arg, BarArg *a)$/;"	f	typeref:typename:int
clickfunc	dwm.c	/^	int (*clickfunc)(Bar *bar, Arg *arg, BarArg *a);$/;"	m	struct:__anon0f53a99e0908	typeref:typename:int (*)(Bar * bar,Arg * arg,BarArg * a)	file:
clientmessage	def.dwm.c	/^clientmessage(XEvent *e)$/;"	f	typeref:typename:void
clientmessage	dwm.c	/^clientmessage(XEvent *e)$/;"	f	typeref:typename:void
clients	def.dwm.c	/^	Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
clients	dwm.c	/^	Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
cmd	patch/bar_statuscmd.h	/^	const char *cmd;$/;"	m	struct:__anonf36448860108	typeref:typename:const char *
col	patch/layout_columns.c	/^col(Monitor *m)$/;"	f	typeref:typename:void	file:
colors	config.def.h	/^static char *colors[][ColCount] = {$/;"	v	typeref:typename:char * [][]
colors	config.h	/^static char *colors[][ColCount] = {$/;"	v	typeref:typename:char * [][]
config.h	Makefile	/^config.h:$/;"	t
configure	def.dwm.c	/^configure(Client *c)$/;"	f	typeref:typename:void
configure	dwm.c	/^configure(Client *c)$/;"	f	typeref:typename:void
configurenotify	def.dwm.c	/^configurenotify(XEvent *e)$/;"	f	typeref:typename:void
configurenotify	dwm.c	/^configurenotify(XEvent *e)$/;"	f	typeref:typename:void
configurerequest	def.dwm.c	/^configurerequest(XEvent *e)$/;"	f	typeref:typename:void
configurerequest	dwm.c	/^configurerequest(XEvent *e)$/;"	f	typeref:typename:void
connect_to_socket	patch/ipc/dwm-msg.c	/^connect_to_socket()$/;"	f	typeref:typename:void	file:
copyvalidchars	def.dwm.c	/^copyvalidchars(char *text, char *rawtext)$/;"	f	typeref:typename:void
copyvalidchars	patch/bar_statuscmd.c	/^copyvalidchars(char *text, char *rawtext)$/;"	f	typeref:typename:void
createmon	def.dwm.c	/^createmon(void)$/;"	f	typeref:typename:Monitor *
createmon	dwm.c	/^createmon(void)$/;"	f	typeref:typename:Monitor *
cursor	def.dwm.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
cursor	drw.h	/^	Cursor cursor;$/;"	m	struct:__anon0f5116480108	typeref:typename:Cursor
cursor	dwm.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
curtag	patch/pertag.c	/^	unsigned int curtag; \/* current tag index *\/$/;"	m	struct:Pertag	typeref:typename:unsigned int	file:
deck	patch/layout_deck.c	/^deck(Monitor *m)$/;"	f	typeref:typename:void	file:
deck	vanitygaps.c	/^deck(Monitor *m)$/;"	f	typeref:typename:void	file:
defaultgaps	patch/vanitygaps.c	/^defaultgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
defaultgaps	vanitygaps.c	/^defaultgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
destroynotify	def.dwm.c	/^destroynotify(XEvent *e)$/;"	f	typeref:typename:void
destroynotify	dwm.c	/^destroynotify(XEvent *e)$/;"	f	typeref:typename:void
detach	def.dwm.c	/^detach(Client *c)$/;"	f	typeref:typename:void
detach	dwm.c	/^detach(Client *c)$/;"	f	typeref:typename:void
detachstack	def.dwm.c	/^detachstack(Client *c)$/;"	f	typeref:typename:void
detachstack	dwm.c	/^detachstack(Client *c)$/;"	f	typeref:typename:void
die	util.c	/^die(const char *fmt, ...)$/;"	f	typeref:typename:void
dirtomon	def.dwm.c	/^dirtomon(int dir)$/;"	f	typeref:typename:Monitor *
dirtomon	dwm.c	/^dirtomon(int dir)$/;"	f	typeref:typename:Monitor *
dist	Makefile	/^dist: clean$/;"	t
dmenucmd	config.def.h	/^static const char *dmenucmd[] = {$/;"	v	typeref:typename:const char * []
dmenucmd	config.h	/^static const char *dmenucmd[] = {$/;"	v	typeref:typename:const char * []
dmenufont	config.def.h	/^static const char dmenufont[]            = "monospace:size=10";$/;"	v	typeref:typename:const char[]
dmenufont	config.h	/^static const char dmenufont[]            = "monospace:size=10";$/;"	v	typeref:typename:const char[]
dmenumon	config.def.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dmenumon	config.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dpy	def.dwm.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:__anon0f5116480308	typeref:typename:Display *
dpy	dwm.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
draw_ltsymbol	patch/bar_ltsymbol.c	/^draw_ltsymbol(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
draw_status	patch/bar_status.c	/^draw_status(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
draw_status2d	patch/bar_status2d.c	/^draw_status2d(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
draw_status2d_es	patch/bar_status2d.c	/^draw_status2d_es(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
draw_status_es	patch/bar_status.c	/^draw_status_es(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
draw_tags	patch/bar_tags.c	/^draw_tags(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
draw_wintitle	patch/bar_wintitle.c	/^draw_wintitle(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
drawable	drw.h	/^	Drawable drawable;$/;"	m	struct:__anon0f5116480308	typeref:typename:Drawable
drawbar	def.dwm.c	/^drawbar(Monitor *m)$/;"	f	typeref:typename:void
drawbar	dwm.c	/^drawbar(Monitor *m)$/;"	f	typeref:typename:void
drawbars	def.dwm.c	/^drawbars(void)$/;"	f	typeref:typename:void
drawbars	dwm.c	/^drawbars(void)$/;"	f	typeref:typename:void
drawbarwin	dwm.c	/^drawbarwin(Bar *bar)$/;"	f	typeref:typename:void
drawfunc	dwm.c	/^	int (*drawfunc)(Bar *bar, BarArg *a);$/;"	m	struct:__anon0f53a99e0908	typeref:typename:int (*)(Bar * bar,BarArg * a)	file:
drawindicator	patch/bar_indicators.c	/^drawindicator(Monitor *m, Client *c, unsigned int occ, int x, int y, int w, int h, unsigned int /;"	f	typeref:typename:void
drawstateindicator	patch/bar_indicators.c	/^drawstateindicator(Monitor *m, Client *c, unsigned int occ, int x, int y, int w, int h, unsigned/;"	f	typeref:typename:void
drawstatusbar	patch/bar_status2d.c	/^drawstatusbar(BarArg *a, char* stext)$/;"	f	typeref:typename:int
drw	def.dwm.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw	dwm.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw_clr_create	drw.c	/^drw_clr_create($/;"	f	typeref:typename:void
drw_create	drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h)$/;"	f	typeref:typename:Drw *
drw_cur_create	drw.c	/^drw_cur_create(Drw *drw, int shape)$/;"	f	typeref:typename:Cur *
drw_cur_free	drw.c	/^drw_cur_free(Drw *drw, Cur *cursor)$/;"	f	typeref:typename:void
drw_font_getexts	drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h/;"	f	typeref:typename:void
drw_fontset_create	drw.c	/^drw_fontset_create(Drw* drw, const char *fonts[], size_t fontcount)$/;"	f	typeref:typename:Fnt *
drw_fontset_free	drw.c	/^drw_fontset_free(Fnt *font)$/;"	f	typeref:typename:void
drw_fontset_getwidth	drw.c	/^drw_fontset_getwidth(Drw *drw, const char *text, Bool markup)$/;"	f	typeref:typename:unsigned int
drw_free	drw.c	/^drw_free(Drw *drw)$/;"	f	typeref:typename:void
drw_map	drw.c	/^drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_rect	drw.c	/^drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)$/;"	f	typeref:typename:void
drw_resize	drw.c	/^drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_scm_create	drw.c	/^drw_scm_create($/;"	f	typeref:typename:Clr *
drw_setfontset	drw.c	/^drw_setfontset(Drw *drw, Fnt *set)$/;"	f	typeref:typename:void
drw_setscheme	drw.c	/^drw_setscheme(Drw *drw, Clr *scm)$/;"	f	typeref:typename:void
drw_text	drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char */;"	f	typeref:typename:int
dst	def.dwm.c	/^	void *dst;$/;"	m	struct:__anonc707d71b0b08	typeref:typename:void *	file:
dwindle	patch/layout_fibonacci.c	/^dwindle(Monitor *m)$/;"	f	typeref:typename:void	file:
dwindle	vanitygaps.c	/^dwindle(Monitor *m)$/;"	f	typeref:typename:void	file:
dwm	Makefile	/^dwm: ${OBJ}$/;"	t
dwm-msg	Makefile	/^dwm-msg:$/;"	t
dwm_ipc_header	patch/ipc/dwm-msg.c	/^typedef struct dwm_ipc_header {$/;"	s	file:
dwm_ipc_header_t	patch/ipc/dwm-msg.c	/^} __attribute((packed)) dwm_ipc_header_t;$/;"	t	file:
dwmblockspid	def.dwm.c	/^pid_t dwmblockspid = 0;$/;"	v	typeref:typename:pid_t
dwmblockssig	def.dwm.c	/^static int dwmblockssig;$/;"	v	typeref:typename:int	file:
ecalloc	util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
enablegaps	patch/vanitygaps.c	/^static int enablegaps = 1;$/;"	v	typeref:typename:int	file:
enablegaps	vanitygaps.c	/^static int enablegaps = 1;$/;"	v	typeref:typename:int	file:
enternotify	def.dwm.c	/^enternotify(XEvent *e)$/;"	f	typeref:typename:void
enternotify	dwm.c	/^enternotify(XEvent *e)$/;"	f	typeref:typename:void
estext	dwm.c	/^static char estext[1024];$/;"	v	typeref:typename:char[1024]	file:
event	patch/ipc/IPCClient.h	/^  struct epoll_event event;$/;"	m	struct:IPCClient	typeref:struct:epoll_event
expose	def.dwm.c	/^expose(XEvent *e)$/;"	f	typeref:typename:void
expose	dwm.c	/^expose(XEvent *e)$/;"	f	typeref:typename:void
external	dwm.c	/^	int external;$/;"	m	struct:Bar	typeref:typename:int	file:
f	def.dwm.c	/^	float f;$/;"	m	union:__anonc707d71b060a	typeref:typename:float	file:
f	dwm.c	/^	float f;$/;"	m	union:__anon0f53a99e070a	typeref:typename:float	file:
fd	patch/ipc/IPCClient.h	/^  int fd;$/;"	m	struct:IPCClient	typeref:typename:int
fibonacci	patch/layout_fibonacci.c	/^fibonacci(Monitor *m, int s)$/;"	f	typeref:typename:void
fibonacci	vanitygaps.c	/^fibonacci(Monitor *m, int s)$/;"	f	typeref:typename:void	file:
floatindicatortype	config.def.h	/^static int floatindicatortype            = INDICATOR_TOP_LEFT_SQUARE;$/;"	v	typeref:typename:int
floatindicatortype	config.h	/^static int floatindicatortype            = INDICATOR_TOP_LEFT_SQUARE;$/;"	v	typeref:typename:int
flush_socket_reply	patch/ipc/dwm-msg.c	/^flush_socket_reply()$/;"	f	typeref:typename:void	file:
focus	def.dwm.c	/^focus(Client *c)$/;"	f	typeref:typename:void
focus	dwm.c	/^focus(Client *c)$/;"	f	typeref:typename:void
focusin	def.dwm.c	/^focusin(XEvent *e)$/;"	f	typeref:typename:void
focusin	dwm.c	/^focusin(XEvent *e)$/;"	f	typeref:typename:void
focusmon	def.dwm.c	/^focusmon(const Arg *arg)$/;"	f	typeref:typename:void
focusmon	dwm.c	/^focusmon(const Arg *arg)$/;"	f	typeref:typename:void
focusstack	def.dwm.c	/^focusstack(const Arg *arg)$/;"	f	typeref:typename:void
focusstack	dwm.c	/^focusstack(const Arg *arg)$/;"	f	typeref:typename:void
fonts	config.def.h	/^static const char *fonts[]               = { "monospace:size=10" };$/;"	v	typeref:typename:const char * []
fonts	config.h	/^static const char *fonts[]               = { "monospace:size=10" };$/;"	v	typeref:typename:const char * []
fonts	drw.h	/^	Fnt *fonts;$/;"	m	struct:__anon0f5116480308	typeref:typename:Fnt *
force_warp	dwm.c	/^static int force_warp = 0; \/\/ force warp in some situations, e.g. killclient$/;"	v	typeref:typename:int	file:
func	def.dwm.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anonc707d71b0808	typeref:typename:void (*)(const Arg *)	file:
func	def.dwm.c	/^	void (*func)(const Arg *arg);$/;"	m	struct:__anonc707d71b0708	typeref:typename:void (*)(const Arg * arg)	file:
func	dwm.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:void (*)(const Arg *)	file:
func	dwm.c	/^	void (*func)(const Arg *arg);$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:void (*)(const Arg * arg)	file:
gappih	config.def.h	/^static const unsigned int gappih         = 20;  \/* horiz inner gap between windows *\/$/;"	v	typeref:typename:const unsigned int
gappih	config.h	/^static const unsigned int gappih         = 20;  \/* horiz inner gap between windows *\/$/;"	v	typeref:typename:const unsigned int
gappih	def.dwm.c	/^	int gappih;           \/* horizontal gap between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappih	dwm.c	/^	int gappih;           \/* horizontal gap between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappiv	config.def.h	/^static const unsigned int gappiv         = 10;  \/* vert inner gap between windows *\/$/;"	v	typeref:typename:const unsigned int
gappiv	config.h	/^static const unsigned int gappiv         = 20;  \/* vert inner gap between windows *\/$/;"	v	typeref:typename:const unsigned int
gappiv	def.dwm.c	/^	int gappiv;           \/* vertical gap between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappiv	dwm.c	/^	int gappiv;           \/* vertical gap between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappoh	config.def.h	/^static const unsigned int gappoh         = 10;  \/* horiz outer gap between windows and screen e/;"	v	typeref:typename:const unsigned int
gappoh	config.h	/^static const unsigned int gappoh         = 20;  \/* horiz outer gap between windows and screen e/;"	v	typeref:typename:const unsigned int
gappoh	def.dwm.c	/^	int gappoh;           \/* horizontal outer gaps *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappoh	dwm.c	/^	int gappoh;           \/* horizontal outer gaps *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappov	config.def.h	/^static const unsigned int gappov         = 30;  \/* vert outer gap between windows and screen ed/;"	v	typeref:typename:const unsigned int
gappov	config.h	/^static const unsigned int gappov         = 20;  \/* vert outer gap between windows and screen ed/;"	v	typeref:typename:const unsigned int
gappov	def.dwm.c	/^	int gappov;           \/* vertical outer gaps *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappov	dwm.c	/^	int gappov;           \/* vertical outer gaps *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gc	drw.h	/^	GC gc;$/;"	m	struct:__anon0f5116480308	typeref:typename:GC
get_dwm_client	patch/ipc/dwm-msg.c	/^get_dwm_client(Window win)$/;"	f	typeref:typename:int	file:
get_layouts	patch/ipc/dwm-msg.c	/^get_layouts()$/;"	f	typeref:typename:int	file:
get_monitors	patch/ipc/dwm-msg.c	/^get_monitors()$/;"	f	typeref:typename:int	file:
get_tags	patch/ipc/dwm-msg.c	/^get_tags()$/;"	f	typeref:typename:int	file:
getatomprop	def.dwm.c	/^getatomprop(Client *c, Atom prop)$/;"	f	typeref:typename:Atom
getatomprop	dwm.c	/^getatomprop(Client *c, Atom prop, Atom req)$/;"	f	typeref:typename:Atom
getdwmblockspid	def.dwm.c	/^getdwmblockspid()$/;"	f	typeref:typename:int
getfacts	patch/layout_facts.c	/^getfacts(Monitor *m, int msize, int ssize, float *mf, float *sf, int *mr, int *sr)$/;"	f	typeref:typename:void
getfacts	vanitygaps.c	/^getfacts(Monitor *m, int msize, int ssize, float *mf, float *sf, int *mr, int *sr)$/;"	f	typeref:typename:void
getgaps	patch/vanitygaps.c	/^getgaps(Monitor *m, int *oh, int *ov, int *ih, int *iv, unsigned int *nc)$/;"	f	typeref:typename:void	file:
getgaps	vanitygaps.c	/^getgaps(Monitor *m, int *oh, int *ov, int *ih, int *iv, unsigned int *nc)$/;"	f	typeref:typename:void	file:
getparentprocess	def.dwm.c	/^getparentprocess(pid_t p)$/;"	f	typeref:typename:pid_t
getparentprocess	patch/swallow.c	/^getparentprocess(pid_t p)$/;"	f	typeref:typename:pid_t
getrootptr	def.dwm.c	/^getrootptr(int *x, int *y)$/;"	f	typeref:typename:int
getrootptr	dwm.c	/^getrootptr(int *x, int *y)$/;"	f	typeref:typename:int
getstate	def.dwm.c	/^getstate(Window w)$/;"	f	typeref:typename:long
getstate	dwm.c	/^getstate(Window w)$/;"	f	typeref:typename:long
getstatusbarpid	patch/bar_dwmblocks.c	/^getstatusbarpid()$/;"	f	typeref:typename:pid_t
gettextprop	def.dwm.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int
gettextprop	dwm.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int
grabbuttons	def.dwm.c	/^grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void
grabbuttons	dwm.c	/^grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void
grabkeys	def.dwm.c	/^grabkeys(void)$/;"	f	typeref:typename:void
grabkeys	dwm.c	/^grabkeys(void)$/;"	f	typeref:typename:void
h	def.dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
h	drw.h	/^	unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int
h	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
h	dwm.c	/^	int h;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:int	file:
h	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
handler	def.dwm.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
handler	dwm.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
hidnormbgcolor	config.def.h	/^static char hidnormbgcolor[]             = "#222222";$/;"	v	typeref:typename:char[]
hidnormbgcolor	config.h	/^static char hidnormbgcolor[]             = "#222222";$/;"	v	typeref:typename:char[]
hidnormfgcolor	config.def.h	/^static char hidnormfgcolor[]             = "#005577";$/;"	v	typeref:typename:char[]
hidnormfgcolor	config.h	/^static char hidnormfgcolor[]             = "#005577";$/;"	v	typeref:typename:char[]
hidselbgcolor	config.def.h	/^static char hidselbgcolor[]              = "#222222";$/;"	v	typeref:typename:char[]
hidselbgcolor	config.h	/^static char hidselbgcolor[]              = "#222222";$/;"	v	typeref:typename:char[]
hidselfgcolor	config.def.h	/^static char hidselfgcolor[]              = "#227799";$/;"	v	typeref:typename:char[]
hidselfgcolor	config.h	/^static char hidselfgcolor[]              = "#227799";$/;"	v	typeref:typename:char[]
hintsvalid	def.dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
hintsvalid	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
hover_tags	patch/bar_tags.c	/^hover_tags(Bar *bar, BarArg *a, XMotionEvent *ev)$/;"	f	typeref:typename:int
hoverfunc	dwm.c	/^	int (*hoverfunc)(Bar *bar, BarArg *a, XMotionEvent *ev);$/;"	m	struct:__anon0f53a99e0908	typeref:typename:int (*)(Bar * bar,BarArg * a,XMotionEvent * ev)	file:
i	def.dwm.c	/^	int i;$/;"	m	union:__anonc707d71b060a	typeref:typename:int	file:
i	dwm.c	/^	int i;$/;"	m	union:__anon0f53a99e070a	typeref:typename:int	file:
id	patch/bar_statuscmd.h	/^	int id;$/;"	m	struct:__anonf36448860108	typeref:typename:int
idx	dwm.c	/^	int idx;$/;"	m	struct:Bar	typeref:typename:int	file:
ignore_reply	patch/ipc/dwm-msg.c	/^static unsigned int ignore_reply = 0;$/;"	v	typeref:typename:unsigned int	file:
ignore_warp	dwm.c	/^static int ignore_warp = 0; \/\/ force skip warp in some situations, e.g. dragmfact, dragcfact$/;"	v	typeref:typename:int	file:
ignoreconfigurerequests	dwm.c	/^static int ignoreconfigurerequests = 0;$/;"	v	typeref:typename:int	file:
inch	def.dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
inch	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
incnmaster	def.dwm.c	/^incnmaster(const Arg *arg)$/;"	f	typeref:typename:void
incnmaster	dwm.c	/^incnmaster(const Arg *arg)$/;"	f	typeref:typename:void
incrgaps	patch/vanitygaps.c	/^incrgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
incrgaps	vanitygaps.c	/^incrgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
incrigaps	patch/vanitygaps.c	/^incrigaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
incrihgaps	patch/vanitygaps.c	/^incrihgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
incrivgaps	patch/vanitygaps.c	/^incrivgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
incrogaps	patch/vanitygaps.c	/^incrogaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
incrohgaps	patch/vanitygaps.c	/^incrohgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
incrovgaps	patch/vanitygaps.c	/^incrovgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
incw	def.dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
incw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
install	Makefile	/^install: all$/;"	t
instance	def.dwm.c	/^	const char *instance;$/;"	m	struct:__anonc707d71b0a08	typeref:typename:const char *	file:
instance	dwm.c	/^	const char *instance;$/;"	m	struct:__anon0f53a99e0d08	typeref:typename:const char *	file:
is_flexipatch	flexipatch-finalizer.sh	/^function is_flexipatch(patch) {$/;"	f
is_float	patch/ipc/dwm-msg.c	/^is_float(const char *s)$/;"	f	typeref:typename:int	file:
is_signed_int	patch/ipc/dwm-msg.c	/^is_signed_int(const char *s)$/;"	f	typeref:typename:int	file:
is_unsigned_int	patch/ipc/dwm-msg.c	/^is_unsigned_int(const char *s)$/;"	f	typeref:typename:int	file:
isdescprocess	def.dwm.c	/^isdescprocess(pid_t p, pid_t c)$/;"	f	typeref:typename:int
isdescprocess	patch/swallow.c	/^isdescprocess(pid_t p, pid_t c)$/;"	f	typeref:typename:int
isfixed	def.dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
isfixed	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	def.dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
isfloating	def.dwm.c	/^	int isfloating;$/;"	m	struct:__anonc707d71b0a08	typeref:typename:int	file:
isfloating	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	dwm.c	/^	int isfloating;$/;"	m	struct:__anon0f53a99e0d08	typeref:typename:int	file:
isfullscreen	def.dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
isfullscreen	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
issticky	def.dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
issticky	dwm.c	/^	int issticky;$/;"	m	struct:Client	typeref:typename:int	file:
isterminal	def.dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
isterminal	def.dwm.c	/^	int isterminal;$/;"	m	struct:__anonc707d71b0a08	typeref:typename:int	file:
isterminal	dwm.c	/^	int isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:
isterminal	dwm.c	/^	int isterminal;$/;"	m	struct:__anon0f53a99e0d08	typeref:typename:int	file:
istrue	flexipatch-finalizer.sh	/^function istrue(f) {$/;"	f
isuniquegeom	def.dwm.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	typeref:typename:int	file:
isuniquegeom	dwm.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	typeref:typename:int	file:
isurgent	def.dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
isurgent	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
keypress	def.dwm.c	/^keypress(XEvent *e)$/;"	f	typeref:typename:void
keypress	dwm.c	/^keypress(XEvent *e)$/;"	f	typeref:typename:void
keys	config.def.h	/^static const Key keys[] = {$/;"	v	typeref:typename:const Key[]
keys	config.h	/^static const Key keys[] = {$/;"	v	typeref:typename:const Key[]
keysym	def.dwm.c	/^	KeySym keysym;$/;"	m	struct:__anonc707d71b0808	typeref:typename:KeySym	file:
keysym	dwm.c	/^	KeySym keysym;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:KeySym	file:
killclient	def.dwm.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void
killclient	dwm.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void
layouts	config.def.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
layouts	config.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
limitexceeded	def.dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:
limitexceeded	dwm.c	/^struct NumTags { char limitexceeded[NUMTAGS > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:
load_xresources	def.dwm.c	/^load_xresources(void)$/;"	f	typeref:typename:void
loadxrdb	patch/xrdb.c	/^loadxrdb()$/;"	f	typeref:typename:void
lockfullscreen	config.def.h	/^static const int lockfullscreen = 1; \/* 1 will force focus on the fullscreen window *\/$/;"	v	typeref:typename:const int
lockfullscreen	config.h	/^static const int lockfullscreen = 1; \/* 1 will force focus on the fullscreen window *\/$/;"	v	typeref:typename:const int
lrpad	def.dwm.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lrpad	dwm.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lt	def.dwm.c	/^	const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:
lt	dwm.c	/^	const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:
ltidxs	patch/pertag.c	/^	const Layout *ltidxs[NUMTAGS + 1][2]; \/* matrix of tags and layouts indexes  *\/$/;"	m	struct:Pertag	typeref:typename:const Layout * [][2]	file:
ltsymbol	def.dwm.c	/^	char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
ltsymbol	dwm.c	/^	char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
magic	patch/ipc/dwm-msg.c	/^  uint8_t magic[IPC_MAGIC_LEN];$/;"	m	struct:dwm_ipc_header	typeref:typename:uint8_t[]	file:
main	def.dwm.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	dwm.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	patch/ipc/dwm-msg.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	transient.c	/^int main(void) {$/;"	f	typeref:typename:int
manage	def.dwm.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void
manage	dwm.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void
mappingnotify	def.dwm.c	/^mappingnotify(XEvent *e)$/;"	f	typeref:typename:void
mappingnotify	dwm.c	/^mappingnotify(XEvent *e)$/;"	f	typeref:typename:void
maprequest	def.dwm.c	/^maprequest(XEvent *e)$/;"	f	typeref:typename:void
maprequest	dwm.c	/^maprequest(XEvent *e)$/;"	f	typeref:typename:void
mask	def.dwm.c	/^	unsigned int mask;$/;"	m	struct:__anonc707d71b0708	typeref:typename:unsigned int	file:
mask	dwm.c	/^	unsigned int mask;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:unsigned int	file:
maxa	def.dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
maxa	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
maxh	def.dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
maxh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
maxw	def.dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
maxw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
mfact	config.def.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	config.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	def.dwm.c	/^	float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:
mfact	dwm.c	/^	float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:
mfacts	patch/pertag.c	/^	float mfacts[NUMTAGS + 1]; \/* mfacts per tag *\/$/;"	m	struct:Pertag	typeref:typename:float[]	file:
mh	def.dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mh	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mina	def.dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
mina	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
minh	def.dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
minh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
minw	def.dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
minw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh, hintsvalid;$/;"	m	struct:Client	typeref:typename:int	file:
mod	def.dwm.c	/^	unsigned int mod;$/;"	m	struct:__anonc707d71b0808	typeref:typename:unsigned int	file:
mod	dwm.c	/^	unsigned int mod;$/;"	m	struct:__anon0f53a99e0b08	typeref:typename:unsigned int	file:
mon	def.dwm.c	/^	Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:
mon	dwm.c	/^	Monitor *mon;$/;"	m	struct:Bar	typeref:typename:Monitor *	file:
mon	dwm.c	/^	Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:
monitor	def.dwm.c	/^	int monitor;$/;"	m	struct:__anonc707d71b0a08	typeref:typename:int	file:
monitor	dwm.c	/^	int monitor;$/;"	m	struct:__anon0f53a99e0908	typeref:typename:int	file:
monitor	dwm.c	/^	int monitor;$/;"	m	struct:__anon0f53a99e0d08	typeref:typename:int	file:
monocle	def.dwm.c	/^monocle(Monitor *m)$/;"	f	typeref:typename:void
monocle	patch/layout_monocle.c	/^monocle(Monitor *m)$/;"	f	typeref:typename:void
mons	def.dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
mons	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
motionnotify	def.dwm.c	/^motionnotify(XEvent *e)$/;"	f	typeref:typename:void
motionnotify	dwm.c	/^motionnotify(XEvent *e)$/;"	f	typeref:typename:void
movemouse	def.dwm.c	/^movemouse(const Arg *arg)$/;"	f	typeref:typename:void
movemouse	dwm.c	/^movemouse(const Arg *arg)$/;"	f	typeref:typename:void
movestack	patch/movestack.c	/^movestack(const Arg *arg)$/;"	f	typeref:typename:void
mw	def.dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mw	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mx	def.dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mx	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my	def.dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my build of dwm (using flexipatch)	README.md	/^# my build of dwm (using flexipatch)$/;"	c
name	def.dwm.c	/^	char *name;$/;"	m	struct:__anonc707d71b0b08	typeref:typename:char *	file:
name	def.dwm.c	/^	char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:
name	dwm.c	/^	char *name; \/\/ for debugging$/;"	m	struct:__anon0f53a99e0908	typeref:typename:char *	file:
name	dwm.c	/^	char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:
netatom	def.dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
netatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
neverfocus	def.dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
neverfocus	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
next	def.dwm.c	/^	Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:
next	def.dwm.c	/^	Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:
next	drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *
next	dwm.c	/^	Bar *next;$/;"	m	struct:Bar	typeref:typename:Bar *	file:
next	dwm.c	/^	Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:
next	dwm.c	/^	Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:
next	patch/ipc/IPCClient.h	/^  IPCClient *next;$/;"	m	struct:IPCClient	typeref:typename:IPCClient *
nexttiled	def.dwm.c	/^nexttiled(Client *c)$/;"	f	typeref:typename:Client *
nexttiled	dwm.c	/^nexttiled(Client *c)$/;"	f	typeref:typename:Client *
nmaster	config.def.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	config.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	def.dwm.c	/^	int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:
nmaster	dwm.c	/^	int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:
nmasters	patch/pertag.c	/^	int nmasters[NUMTAGS + 1]; \/* number of windows in master area *\/$/;"	m	struct:Pertag	typeref:typename:int[]	file:
normbgcolor	config.def.h	/^static char normbgcolor[]                = "#222222";$/;"	v	typeref:typename:char[]
normbgcolor	config.h	/^static char normbgcolor[]                = "#222222";$/;"	v	typeref:typename:char[]
normbordercolor	config.def.h	/^static char normbordercolor[]            = "#444444";$/;"	v	typeref:typename:char[]
normbordercolor	config.h	/^static char normbordercolor[]            = "#444444";$/;"	v	typeref:typename:char[]
normfgcolor	config.def.h	/^static char normfgcolor[]                = "#bbbbbb";$/;"	v	typeref:typename:char[]
normfgcolor	config.h	/^static char normfgcolor[]                = "#bbbbbb";$/;"	v	typeref:typename:char[]
normfloatcolor	config.def.h	/^static char normfloatcolor[]             = "#db8fd9";$/;"	v	typeref:typename:char[]
normfloatcolor	config.h	/^static char normfloatcolor[]             = "#db8fd9";$/;"	v	typeref:typename:char[]
noswallow	def.dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
noswallow	def.dwm.c	/^	int noswallow;$/;"	m	struct:__anonc707d71b0a08	typeref:typename:int	file:
noswallow	dwm.c	/^	int isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:
noswallow	dwm.c	/^	int noswallow;$/;"	m	struct:__anon0f53a99e0d08	typeref:typename:int	file:
num	def.dwm.c	/^	int num;$/;"	m	struct:Monitor	typeref:typename:int	file:
num	dwm.c	/^	int num;$/;"	m	struct:Monitor	typeref:typename:int	file:
numlockmask	def.dwm.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
numlockmask	dwm.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
oldbw	def.dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
oldbw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
oldh	def.dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldh	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldstate	def.dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow, i/;"	m	struct:Client	typeref:typename:int	file:
oldstate	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
oldw	def.dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldw	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldx	def.dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldx	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldy	def.dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldy	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
pattern	drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *
pertag	dwm.c	/^	Pertag *pertag;$/;"	m	struct:Monitor	typeref:typename:Pertag *	file:
pertagview	patch/pertag.c	/^pertagview(const Arg *arg)$/;"	f	typeref:typename:void
pid	def.dwm.c	/^	pid_t pid;$/;"	m	struct:Client	typeref:typename:pid_t	file:
pid	dwm.c	/^	pid_t pid;$/;"	m	struct:Client	typeref:typename:pid_t	file:
pop	def.dwm.c	/^pop(Client *c)$/;"	f	typeref:typename:void
pop	dwm.c	/^pop(Client *c)$/;"	f	typeref:typename:void
prev	patch/ipc/IPCClient.h	/^  IPCClient *prev;$/;"	m	struct:IPCClient	typeref:typename:IPCClient *
print_socket_reply	patch/ipc/dwm-msg.c	/^print_socket_reply()$/;"	f	typeref:typename:void	file:
print_usage	patch/ipc/dwm-msg.c	/^print_usage(const char *name)$/;"	f	typeref:typename:void	file:
propertynotify	def.dwm.c	/^propertynotify(XEvent *e)$/;"	f	typeref:typename:void
propertynotify	dwm.c	/^propertynotify(XEvent *e)$/;"	f	typeref:typename:void
pushstack	def.dwm.c	/^pushstack(const Arg *arg) {$/;"	f	typeref:typename:void
quit	def.dwm.c	/^quit(const Arg *arg)$/;"	f	typeref:typename:void
quit	dwm.c	/^quit(const Arg *arg)$/;"	f	typeref:typename:void
rawestext	dwm.c	/^static char rawestext[1024];$/;"	v	typeref:typename:char[1024]	file:
rawstext	def.dwm.c	/^static char rawstext[256];$/;"	v	typeref:typename:char[256]	file:
rawstext	dwm.c	/^static char rawstext[1024];$/;"	v	typeref:typename:char[1024]	file:
read_socket	patch/ipc/dwm-msg.c	/^read_socket(IPCMessageType *msg_type, uint32_t *msg_size, char **msg)$/;"	f	typeref:typename:int	file:
recttomon	def.dwm.c	/^recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *
recttomon	dwm.c	/^recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *
recv_message	patch/ipc/dwm-msg.c	/^recv_message(uint8_t *msg_type, uint32_t *reply_size, uint8_t **reply)$/;"	f	typeref:typename:int	file:
resize	def.dwm.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void
resize	dwm.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void
resizeclient	def.dwm.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void
resizeclient	dwm.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void
resizehints	config.def.h	/^static const int resizehints = 0;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizehints	config.h	/^static const int resizehints = 0;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizemouse	def.dwm.c	/^resizemouse(const Arg *arg)$/;"	f	typeref:typename:void
resizemouse	dwm.c	/^resizemouse(const Arg *arg)$/;"	f	typeref:typename:void
resource_load	def.dwm.c	/^resource_load(XrmDatabase db, char *name, enum resource_type rtype, void *dst)$/;"	f	typeref:typename:void
resource_type	def.dwm.c	/^enum resource_type {$/;"	g	file:
restack	def.dwm.c	/^restack(Monitor *m)$/;"	f	typeref:typename:void
restack	dwm.c	/^restack(Monitor *m)$/;"	f	typeref:typename:void
restart	def.dwm.c	/^static int restart = 0;$/;"	v	typeref:typename:int	file:
restart	patch/restartsig.c	/^static int restart = 0;$/;"	v	typeref:typename:int	file:
root	def.dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
root	drw.h	/^	Window root;$/;"	m	struct:__anon0f5116480308	typeref:typename:Window
root	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
rules	config.def.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
rules	config.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
run	def.dwm.c	/^run(void)$/;"	f	typeref:typename:void
run	dwm.c	/^run(void)$/;"	f	typeref:typename:void
runAutostart	def.dwm.c	/^runAutostart(void) {$/;"	f	typeref:typename:void
runAutostart	dwm.c	/^runAutostart(void) {$/;"	f	typeref:typename:void
run_command	patch/ipc/dwm-msg.c	/^run_command(const char *name, char *args[], int argc)$/;"	f	typeref:typename:int	file:
running	def.dwm.c	/^static int running = 1;$/;"	v	typeref:typename:int	file:
running	dwm.c	/^static volatile sig_atomic_t running = 1;$/;"	v	typeref:typename:volatile sig_atomic_t	file:
scan	def.dwm.c	/^scan(void)$/;"	f	typeref:typename:void
scan	dwm.c	/^scan(void)$/;"	f	typeref:typename:void
scanner	patch/swallow.c	/^static int scanner;$/;"	v	typeref:typename:int	file:
schedule_delete	flexipatch-finalizer.sh	/^function schedule_delete(file) {$/;"	f
scheme	def.dwm.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
scheme	drw.h	/^	Clr *scheme;$/;"	m	struct:__anon0f5116480308	typeref:typename:Clr *
scheme	dwm.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
screen	def.dwm.c	/^static int screen;$/;"	v	typeref:typename:int	file:
screen	drw.h	/^	int screen;$/;"	m	struct:__anon0f5116480308	typeref:typename:int
screen	dwm.c	/^static int screen;$/;"	v	typeref:typename:int	file:
sel	def.dwm.c	/^	Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
sel	dwm.c	/^	Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
selbgcolor	config.def.h	/^static char selbgcolor[]                 = "#005577";$/;"	v	typeref:typename:char[]
selbgcolor	config.h	/^static char selbgcolor[]                 = "#005577";$/;"	v	typeref:typename:char[]
selbordercolor	config.def.h	/^static char selbordercolor[]             = "#005577";$/;"	v	typeref:typename:char[]
selbordercolor	config.h	/^static char selbordercolor[]             = "#005577";$/;"	v	typeref:typename:char[]
selfgcolor	config.def.h	/^static char selfgcolor[]                 = "#eeeeee";$/;"	v	typeref:typename:char[]
selfgcolor	config.h	/^static char selfgcolor[]                 = "#eeeeee";$/;"	v	typeref:typename:char[]
selfloatcolor	config.def.h	/^static char selfloatcolor[]              = "#005577";$/;"	v	typeref:typename:char[]
selfloatcolor	config.h	/^static char selfloatcolor[]              = "#005577";$/;"	v	typeref:typename:char[]
sellt	def.dwm.c	/^	unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
sellt	dwm.c	/^	unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
sellts	patch/pertag.c	/^	unsigned int sellts[NUMTAGS + 1]; \/* selected layouts *\/$/;"	m	struct:Pertag	typeref:typename:unsigned int[]	file:
selmon	def.dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
selmon	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
seltags	def.dwm.c	/^	unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
seltags	dwm.c	/^	unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
send_message	patch/ipc/dwm-msg.c	/^send_message(IPCMessageType msg_type, uint32_t msg_size, uint8_t *msg)$/;"	f	typeref:typename:int	file:
sendevent	def.dwm.c	/^sendevent(Client *c, Atom proto)$/;"	f	typeref:typename:int
sendevent	dwm.c	/^sendevent(Client *c, Atom proto)$/;"	f	typeref:typename:int
sendmon	def.dwm.c	/^sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void
sendmon	dwm.c	/^sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void
setclientstate	def.dwm.c	/^setclientstate(Client *c, long state)$/;"	f	typeref:typename:void
setclientstate	dwm.c	/^setclientstate(Client *c, long state)$/;"	f	typeref:typename:void
setclienttagprop	def.dwm.c	/^setclienttagprop(Client *c)$/;"	f	typeref:typename:void
setfocus	def.dwm.c	/^setfocus(Client *c)$/;"	f	typeref:typename:void
setfocus	dwm.c	/^setfocus(Client *c)$/;"	f	typeref:typename:void
setfullscreen	def.dwm.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void
setfullscreen	dwm.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void
setgaps	patch/vanitygaps.c	/^setgaps(int oh, int ov, int ih, int iv)$/;"	f	typeref:typename:void	file:
setgaps	vanitygaps.c	/^setgaps(int oh, int ov, int ih, int iv)$/;"	f	typeref:typename:void	file:
setlayout	def.dwm.c	/^setlayout(const Arg *arg)$/;"	f	typeref:typename:void
setlayout	dwm.c	/^setlayout(const Arg *arg)$/;"	f	typeref:typename:void
setmfact	def.dwm.c	/^setmfact(const Arg *arg)$/;"	f	typeref:typename:void
setmfact	dwm.c	/^setmfact(const Arg *arg)$/;"	f	typeref:typename:void
setup	def.dwm.c	/^setup(void)$/;"	f	typeref:typename:void
setup	dwm.c	/^setup(void)$/;"	f	typeref:typename:void
seturgent	def.dwm.c	/^seturgent(Client *c, int urg)$/;"	f	typeref:typename:void
seturgent	dwm.c	/^seturgent(Client *c, int urg)$/;"	f	typeref:typename:void
sh	def.dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
sh	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
shifttag	shiftview.c	/^shifttag(const Arg *arg)$/;"	f	typeref:typename:void
shiftview	shiftview.c	/^shiftview(const Arg *arg)$/;"	f	typeref:typename:void
showbar	config.def.h	/^static const int showbar                 = 1;   \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	config.h	/^static const int showbar                 = 1;   \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	def.dwm.c	/^	int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
showbar	dwm.c	/^	int showbar;$/;"	m	struct:Bar	typeref:typename:int	file:
showbar	dwm.c	/^	int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
showhide	def.dwm.c	/^showhide(Client *c)$/;"	f	typeref:typename:void
showhide	dwm.c	/^showhide(Client *c)$/;"	f	typeref:typename:void
sigchld	def.dwm.c	/^sigchld(int unused)$/;"	f	typeref:typename:void
sigdwmblocks	def.dwm.c	/^sigdwmblocks(const Arg *arg)$/;"	f	typeref:typename:void
sighup	def.dwm.c	/^sighup(int unused)$/;"	f	typeref:typename:void
sighup	patch/restartsig.c	/^sighup(int unused)$/;"	f	typeref:typename:void
sigstatusbar	patch/bar_dwmblocks.c	/^sigstatusbar(const Arg *arg)$/;"	f	typeref:typename:void
sigterm	def.dwm.c	/^sigterm(int unused)$/;"	f	typeref:typename:void
sigterm	patch/restartsig.c	/^sigterm(int unused)$/;"	f	typeref:typename:void
size	patch/ipc/dwm-msg.c	/^  uint32_t size;$/;"	m	struct:dwm_ipc_header	typeref:typename:uint32_t	file:
smartgaps_fact	config.def.h	/^static const int smartgaps_fact          = 1;   \/* gap factor when there is only one client; 0 /;"	v	typeref:typename:const int
smartgaps_fact	config.h	/^static const int smartgaps_fact          = 1;   \/* gap factor when there is only one client; 0 /;"	v	typeref:typename:const int
snap	config.def.h	/^static const unsigned int snap           = 32;  \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snap	config.h	/^static const unsigned int snap           = 32;  \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snext	def.dwm.c	/^	Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:
snext	dwm.c	/^	Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:
sock_fd	patch/ipc/dwm-msg.c	/^static int sock_fd = -1;$/;"	v	typeref:typename:int	file:
spawn	def.dwm.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void
spawn	dwm.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void
spiral	patch/layout_fibonacci.c	/^spiral(Monitor *m)$/;"	f	typeref:typename:void	file:
spiral	vanitygaps.c	/^spiral(Monitor *m)$/;"	f	typeref:typename:void	file:
stack	def.dwm.c	/^	Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
stack	dwm.c	/^	Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
stackpos	def.dwm.c	/^stackpos(const Arg *arg) {$/;"	f	typeref:typename:int
status2dtextlength	patch/bar_status2d.c	/^status2dtextlength(char* stext)$/;"	f	typeref:typename:int
statusmon	config.def.h	/^static const int statusmon               = 'A';$/;"	v	typeref:typename:const int
statusmon	config.h	/^static const int statusmon               = 'A';$/;"	v	typeref:typename:const int
statuspid	patch/bar_dwmblocks.c	/^pid_t statuspid = -1;$/;"	v	typeref:typename:pid_t
statussep	config.h	/^static const char statussep              = ';'; \/* separator between status bars *\/$/;"	v	typeref:typename:const char
statussig	patch/bar_dwmblocks.c	/^static int statussig;$/;"	v	typeref:typename:int	file:
stext	def.dwm.c	/^static char stext[256];$/;"	v	typeref:typename:char[256]	file:
stext	dwm.c	/^static char stext[1024];$/;"	v	typeref:typename:char[1024]	file:
subscribe	patch/ipc/dwm-msg.c	/^subscribe(const char *event)$/;"	f	typeref:typename:int	file:
subscriptions	patch/ipc/IPCClient.h	/^  int subscriptions;$/;"	m	struct:IPCClient	typeref:typename:int
sw	def.dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
sw	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
swallow	def.dwm.c	/^swallow(Client *p, Client *c)$/;"	f	typeref:typename:void
swallow	patch/swallow.c	/^swallow(Client *p, Client *c)$/;"	f	typeref:typename:int
swallowfloating	config.def.h	/^static const int swallowfloating         = 0;   \/* 1 means swallow floating windows by default /;"	v	typeref:typename:const int
swallowfloating	config.h	/^static const int swallowfloating         = 0;   \/* 1 means swallow floating windows by default /;"	v	typeref:typename:const int
swallowing	def.dwm.c	/^	Client *swallowing;$/;"	m	struct:Client	typeref:typename:Client *	file:
swallowing	dwm.c	/^	Client *swallowing;$/;"	m	struct:Client	typeref:typename:Client *	file:
swallowingclient	def.dwm.c	/^swallowingclient(Window w)$/;"	f	typeref:typename:Client *
swallowingclient	patch/swallow.c	/^swallowingclient(Window w)$/;"	f	typeref:typename:Client *
switchcol	patch/switchcol.c	/^switchcol(const Arg *arg)$/;"	f	typeref:typename:void
symbol	def.dwm.c	/^	const char *symbol;$/;"	m	struct:__anonc707d71b0908	typeref:typename:const char *	file:
symbol	dwm.c	/^	const char *symbol;$/;"	m	struct:__anon0f53a99e0c08	typeref:typename:const char *	file:
tag	def.dwm.c	/^tag(const Arg *arg)$/;"	f	typeref:typename:void
tag	dwm.c	/^tag(const Arg *arg)$/;"	f	typeref:typename:void
tagicon	patch/bar_tagicons.c	/^tagicon(Monitor *m, int tag)$/;"	f	typeref:typename:char *
tagicons	config.def.h	/^static char *tagicons[][NUMTAGS] =$/;"	v	typeref:typename:char * [][]
tagicons	config.h	/^static char *tagicons[][NUMTAGS] =$/;"	v	typeref:typename:char * [][]
tagindicatortype	config.def.h	/^static int tagindicatortype              = INDICATOR_TOP_LEFT_SQUARE;$/;"	v	typeref:typename:int
tagindicatortype	config.h	/^static int tagindicatortype              = INDICATOR_TOP_LEFT_SQUARE;$/;"	v	typeref:typename:int
tagmon	def.dwm.c	/^tagmon(const Arg *arg)$/;"	f	typeref:typename:void
tagmon	dwm.c	/^tagmon(const Arg *arg)$/;"	f	typeref:typename:void
tags	def.dwm.c	/^	unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:
tags	def.dwm.c	/^	unsigned int tags;$/;"	m	struct:__anonc707d71b0a08	typeref:typename:unsigned int	file:
tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:
tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:__anon0f53a99e0d08	typeref:typename:unsigned int	file:
tagset	def.dwm.c	/^	unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:
tagset	dwm.c	/^	unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:
tagsnormbgcolor	config.def.h	/^static char tagsnormbgcolor[]            = "#222222";$/;"	v	typeref:typename:char[]
tagsnormbgcolor	config.h	/^static char tagsnormbgcolor[]            = "#222222";$/;"	v	typeref:typename:char[]
tagsnormbordercolor	config.def.h	/^static char tagsnormbordercolor[]        = "#444444";$/;"	v	typeref:typename:char[]
tagsnormbordercolor	config.h	/^static char tagsnormbordercolor[]        = "#444444";$/;"	v	typeref:typename:char[]
tagsnormfgcolor	config.def.h	/^static char tagsnormfgcolor[]            = "#bbbbbb";$/;"	v	typeref:typename:char[]
tagsnormfgcolor	config.h	/^static char tagsnormfgcolor[]            = "#bbbbbb";$/;"	v	typeref:typename:char[]
tagsnormfloatcolor	config.def.h	/^static char tagsnormfloatcolor[]         = "#db8fd9";$/;"	v	typeref:typename:char[]
tagsnormfloatcolor	config.h	/^static char tagsnormfloatcolor[]         = "#db8fd9";$/;"	v	typeref:typename:char[]
tagsselbgcolor	config.def.h	/^static char tagsselbgcolor[]             = "#005577";$/;"	v	typeref:typename:char[]
tagsselbgcolor	config.h	/^static char tagsselbgcolor[]             = "#005577";$/;"	v	typeref:typename:char[]
tagsselbordercolor	config.def.h	/^static char tagsselbordercolor[]         = "#005577";$/;"	v	typeref:typename:char[]
tagsselbordercolor	config.h	/^static char tagsselbordercolor[]         = "#005577";$/;"	v	typeref:typename:char[]
tagsselfgcolor	config.def.h	/^static char tagsselfgcolor[]             = "#eeeeee";$/;"	v	typeref:typename:char[]
tagsselfgcolor	config.h	/^static char tagsselfgcolor[]             = "#eeeeee";$/;"	v	typeref:typename:char[]
tagsselfloatcolor	config.def.h	/^static char tagsselfloatcolor[]          = "#005577";$/;"	v	typeref:typename:char[]
tagsselfloatcolor	config.h	/^static char tagsselfloatcolor[]          = "#005577";$/;"	v	typeref:typename:char[]
termcmd	config.def.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
termcmd	config.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
termcol0	patch/bar_status2d.c	/^static char termcol0[]  = "#000000"; \/* black   *\/$/;"	v	typeref:typename:char[]	file:
termcol1	patch/bar_status2d.c	/^static char termcol1[]  = "#ff0000"; \/* red     *\/$/;"	v	typeref:typename:char[]	file:
termcol10	patch/bar_status2d.c	/^static char termcol10[] = "#33ff00"; \/* green   *\/$/;"	v	typeref:typename:char[]	file:
termcol11	patch/bar_status2d.c	/^static char termcol11[] = "#ff0099"; \/* yellow  *\/$/;"	v	typeref:typename:char[]	file:
termcol12	patch/bar_status2d.c	/^static char termcol12[] = "#0066ff"; \/* blue    *\/$/;"	v	typeref:typename:char[]	file:
termcol13	patch/bar_status2d.c	/^static char termcol13[] = "#cc00ff"; \/* magenta *\/$/;"	v	typeref:typename:char[]	file:
termcol14	patch/bar_status2d.c	/^static char termcol14[] = "#00ffff"; \/* cyan    *\/$/;"	v	typeref:typename:char[]	file:
termcol15	patch/bar_status2d.c	/^static char termcol15[] = "#ffffff"; \/* white   *\/$/;"	v	typeref:typename:char[]	file:
termcol2	patch/bar_status2d.c	/^static char termcol2[]  = "#33ff00"; \/* green   *\/$/;"	v	typeref:typename:char[]	file:
termcol3	patch/bar_status2d.c	/^static char termcol3[]  = "#ff0099"; \/* yellow  *\/$/;"	v	typeref:typename:char[]	file:
termcol4	patch/bar_status2d.c	/^static char termcol4[]  = "#0066ff"; \/* blue    *\/$/;"	v	typeref:typename:char[]	file:
termcol5	patch/bar_status2d.c	/^static char termcol5[]  = "#cc00ff"; \/* magenta *\/$/;"	v	typeref:typename:char[]	file:
termcol6	patch/bar_status2d.c	/^static char termcol6[]  = "#00ffff"; \/* cyan    *\/$/;"	v	typeref:typename:char[]	file:
termcol7	patch/bar_status2d.c	/^static char termcol7[]  = "#d0d0d0"; \/* white   *\/$/;"	v	typeref:typename:char[]	file:
termcol8	patch/bar_status2d.c	/^static char termcol8[]  = "#808080"; \/* black   *\/$/;"	v	typeref:typename:char[]	file:
termcol9	patch/bar_status2d.c	/^static char termcol9[]  = "#ff0000"; \/* red     *\/$/;"	v	typeref:typename:char[]	file:
termcolor	patch/bar_status2d.c	/^static char *termcolor[] = {$/;"	v	typeref:typename:char * []	file:
termforwin	def.dwm.c	/^termforwin(const Client *w)$/;"	f	typeref:typename:Client *
termforwin	patch/swallow.c	/^termforwin(const Client *w)$/;"	f	typeref:typename:Client *
tile	patch/layout_tile.c	/^tile(Monitor *m)$/;"	f	typeref:typename:void	file:
tile	vanitygaps.c	/^tile(Monitor *m)$/;"	f	typeref:typename:void	file:
tiledindicatortype	config.def.h	/^static int tiledindicatortype            = INDICATOR_NONE;$/;"	v	typeref:typename:int
tiledindicatortype	config.h	/^static int tiledindicatortype            = INDICATOR_NONE;$/;"	v	typeref:typename:int
title	def.dwm.c	/^	const char *title;$/;"	m	struct:__anonc707d71b0a08	typeref:typename:const char *	file:
title	dwm.c	/^	const char *title;$/;"	m	struct:__anon0f53a99e0d08	typeref:typename:const char *	file:
titlenormbgcolor	config.def.h	/^static char titlenormbgcolor[]           = "#222222";$/;"	v	typeref:typename:char[]
titlenormbgcolor	config.h	/^static char titlenormbgcolor[]           = "#222222";$/;"	v	typeref:typename:char[]
titlenormbordercolor	config.def.h	/^static char titlenormbordercolor[]       = "#444444";$/;"	v	typeref:typename:char[]
titlenormbordercolor	config.h	/^static char titlenormbordercolor[]       = "#444444";$/;"	v	typeref:typename:char[]
titlenormfgcolor	config.def.h	/^static char titlenormfgcolor[]           = "#bbbbbb";$/;"	v	typeref:typename:char[]
titlenormfgcolor	config.h	/^static char titlenormfgcolor[]           = "#bbbbbb";$/;"	v	typeref:typename:char[]
titlenormfloatcolor	config.def.h	/^static char titlenormfloatcolor[]        = "#db8fd9";$/;"	v	typeref:typename:char[]
titlenormfloatcolor	config.h	/^static char titlenormfloatcolor[]        = "#db8fd9";$/;"	v	typeref:typename:char[]
titleselbgcolor	config.def.h	/^static char titleselbgcolor[]            = "#005577";$/;"	v	typeref:typename:char[]
titleselbgcolor	config.h	/^static char titleselbgcolor[]            = "#005577";$/;"	v	typeref:typename:char[]
titleselbordercolor	config.def.h	/^static char titleselbordercolor[]        = "#005577";$/;"	v	typeref:typename:char[]
titleselbordercolor	config.h	/^static char titleselbordercolor[]        = "#005577";$/;"	v	typeref:typename:char[]
titleselfgcolor	config.def.h	/^static char titleselfgcolor[]            = "#eeeeee";$/;"	v	typeref:typename:char[]
titleselfgcolor	config.h	/^static char titleselfgcolor[]            = "#eeeeee";$/;"	v	typeref:typename:char[]
titleselfloatcolor	config.def.h	/^static char titleselfloatcolor[]         = "#005577";$/;"	v	typeref:typename:char[]
titleselfloatcolor	config.h	/^static char titleselfloatcolor[]         = "#005577";$/;"	v	typeref:typename:char[]
togglebar	def.dwm.c	/^togglebar(const Arg *arg)$/;"	f	typeref:typename:void
togglebar	dwm.c	/^togglebar(const Arg *arg)$/;"	f	typeref:typename:void
togglefloating	def.dwm.c	/^togglefloating(const Arg *arg)$/;"	f	typeref:typename:void
togglefloating	dwm.c	/^togglefloating(const Arg *arg)$/;"	f	typeref:typename:void
togglefullscr	def.dwm.c	/^togglefullscr(const Arg *arg)$/;"	f	typeref:typename:void
togglefullscreen	patch/togglefullscreen.c	/^togglefullscreen(const Arg *arg)$/;"	f	typeref:typename:void
togglegaps	patch/vanitygaps.c	/^togglegaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
togglegaps	vanitygaps.c	/^togglegaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
togglescratch	def.dwm.c	/^togglescratch(const Arg *arg)$/;"	f	typeref:typename:void
togglesmartgaps	vanitygaps.c	/^togglesmartgaps(const Arg *arg)$/;"	f	typeref:typename:void	file:
togglesticky	def.dwm.c	/^togglesticky(const Arg *arg)$/;"	f	typeref:typename:void
togglesticky	patch/sticky.c	/^togglesticky(const Arg *arg)$/;"	f	typeref:typename:void
toggletag	def.dwm.c	/^toggletag(const Arg *arg)$/;"	f	typeref:typename:void
toggletag	dwm.c	/^toggletag(const Arg *arg)$/;"	f	typeref:typename:void
toggleview	def.dwm.c	/^toggleview(const Arg *arg)$/;"	f	typeref:typename:void
toggleview	dwm.c	/^toggleview(const Arg *arg)$/;"	f	typeref:typename:void
topbar	config.def.h	/^static const int topbar                  = 1;   \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	config.h	/^static const int topbar                  = 1;   \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	def.dwm.c	/^	int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
topbar	dwm.c	/^	int topbar;$/;"	m	struct:Bar	typeref:typename:int	file:
type	def.dwm.c	/^	enum resource_type type;$/;"	m	struct:__anonc707d71b0b08	typeref:enum:resource_type	file:
type	patch/ipc/dwm-msg.c	/^  uint8_t type;$/;"	m	struct:dwm_ipc_header	typeref:typename:uint8_t	file:
ui	def.dwm.c	/^	unsigned int ui;$/;"	m	union:__anonc707d71b060a	typeref:typename:unsigned int	file:
ui	dwm.c	/^	unsigned int ui;$/;"	m	union:__anon0f53a99e070a	typeref:typename:unsigned int	file:
unfocus	def.dwm.c	/^unfocus(Client *c, int setfocus)$/;"	f	typeref:typename:void
unfocus	dwm.c	/^unfocus(Client *c, int setfocus, Client *nextfocus)$/;"	f	typeref:typename:void
uninstall	Makefile	/^uninstall:$/;"	t
unmanage	def.dwm.c	/^unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void
unmanage	dwm.c	/^unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void
unmapnotify	def.dwm.c	/^unmapnotify(XEvent *e)$/;"	f	typeref:typename:void
unmapnotify	dwm.c	/^unmapnotify(XEvent *e)$/;"	f	typeref:typename:void
unswallow	def.dwm.c	/^unswallow(Client *c)$/;"	f	typeref:typename:void
unswallow	patch/swallow.c	/^unswallow(Client *c)$/;"	f	typeref:typename:void
updatebarpos	def.dwm.c	/^updatebarpos(Monitor *m)$/;"	f	typeref:typename:void
updatebarpos	dwm.c	/^updatebarpos(Monitor *m)$/;"	f	typeref:typename:void
updatebars	def.dwm.c	/^updatebars(void)$/;"	f	typeref:typename:void
updatebars	dwm.c	/^updatebars(void)$/;"	f	typeref:typename:void
updateclientlist	def.dwm.c	/^updateclientlist()$/;"	f	typeref:typename:void
updateclientlist	dwm.c	/^updateclientlist()$/;"	f	typeref:typename:void
updategeom	def.dwm.c	/^updategeom(void)$/;"	f	typeref:typename:int
updategeom	dwm.c	/^updategeom(void)$/;"	f	typeref:typename:int
updatenumlockmask	def.dwm.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void
updatenumlockmask	dwm.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void
updatesizehints	def.dwm.c	/^updatesizehints(Client *c)$/;"	f	typeref:typename:void
updatesizehints	dwm.c	/^updatesizehints(Client *c)$/;"	f	typeref:typename:void
updatestatus	def.dwm.c	/^updatestatus(void)$/;"	f	typeref:typename:void
updatestatus	dwm.c	/^updatestatus(void)$/;"	f	typeref:typename:void
updatetitle	def.dwm.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void
updatetitle	dwm.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void
updatewindowtype	def.dwm.c	/^updatewindowtype(Client *c)$/;"	f	typeref:typename:void
updatewmhints	def.dwm.c	/^updatewmhints(Client *c)$/;"	f	typeref:typename:void
updatewmhints	dwm.c	/^updatewmhints(Client *c)$/;"	f	typeref:typename:void
urgbgcolor	config.def.h	/^static char urgbgcolor[]                 = "#222222";$/;"	v	typeref:typename:char[]
urgbgcolor	config.h	/^static char urgbgcolor[]                 = "#222222";$/;"	v	typeref:typename:char[]
urgbordercolor	config.def.h	/^static char urgbordercolor[]             = "#ff0000";$/;"	v	typeref:typename:char[]
urgbordercolor	config.h	/^static char urgbordercolor[]             = "#ff0000";$/;"	v	typeref:typename:char[]
urgfgcolor	config.def.h	/^static char urgfgcolor[]                 = "#bbbbbb";$/;"	v	typeref:typename:char[]
urgfgcolor	config.h	/^static char urgfgcolor[]                 = "#bbbbbb";$/;"	v	typeref:typename:char[]
urgfloatcolor	config.def.h	/^static char urgfloatcolor[]              = "#db8fd9";$/;"	v	typeref:typename:char[]
urgfloatcolor	config.h	/^static char urgfloatcolor[]              = "#db8fd9";$/;"	v	typeref:typename:char[]
usage_error	patch/ipc/dwm-msg.c	/^usage_error(const char *prog_name, const char *format, ...)$/;"	f	typeref:typename:void	file:
utf8decode	drw.c	/^utf8decode(const char *c, long *u, size_t clen)$/;"	f	typeref:typename:size_t	file:
utf8decodebyte	drw.c	/^utf8decodebyte(const char c, size_t *i)$/;"	f	typeref:typename:long	file:
utf8validate	drw.c	/^utf8validate(long *u, size_t i)$/;"	f	typeref:typename:size_t	file:
utfbyte	drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmask	drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmax	drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:const long[]	file:
utfmin	drw.c	/^static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:const long[]	file:
v	def.dwm.c	/^	const void *v;$/;"	m	union:__anonc707d71b060a	typeref:typename:const void *	file:
v	dwm.c	/^	const void *v;$/;"	m	union:__anon0f53a99e070a	typeref:typename:const void *	file:
view	def.dwm.c	/^view(const Arg *arg)$/;"	f	typeref:typename:void
view	dwm.c	/^view(const Arg *arg)$/;"	f	typeref:typename:void
w	def.dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
w	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
w	dwm.c	/^	int w;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:int	file:
w	dwm.c	/^	int w[BARRULES]; \/\/ width, array length == barrules, then use r index for lookup purposes$/;"	m	struct:Bar	typeref:typename:int[]	file:
w	dwm.c	/^	int x, w; \/\/ position, width for internal use$/;"	m	struct:__anon0f53a99e0908	typeref:typename:int	file:
w	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
warp	patch/warp.c	/^warp(const Client *c)$/;"	f	typeref:typename:void
wh	def.dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wh	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
width_ltsymbol	patch/bar_ltsymbol.c	/^width_ltsymbol(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
width_status	patch/bar_status.c	/^width_status(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
width_status2d	patch/bar_status2d.c	/^width_status2d(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
width_status2d_es	patch/bar_status2d.c	/^width_status2d_es(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
width_status_es	patch/bar_status.c	/^width_status_es(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
width_tags	patch/bar_tags.c	/^width_tags(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
width_wintitle	patch/bar_wintitle.c	/^width_wintitle(Bar *bar, BarArg *a)$/;"	f	typeref:typename:int
widthfunc	dwm.c	/^	int (*widthfunc)(Bar *bar, BarArg *a);$/;"	m	struct:__anon0f53a99e0908	typeref:typename:int (*)(Bar * bar,BarArg * a)	file:
win	def.dwm.c	/^	Window win;$/;"	m	struct:Client	typeref:typename:Window	file:
win	dwm.c	/^	Window win;$/;"	m	struct:Bar	typeref:typename:Window	file:
win	dwm.c	/^	Window win;$/;"	m	struct:Client	typeref:typename:Window	file:
winpid	def.dwm.c	/^winpid(Window w)$/;"	f	typeref:typename:pid_t
winpid	patch/swallow.c	/^winpid(Window w)$/;"	f	typeref:typename:pid_t
wintobar	patch/bar.c	/^wintobar(Window win)$/;"	f	typeref:typename:Bar *
wintoclient	def.dwm.c	/^wintoclient(Window w)$/;"	f	typeref:typename:Client *
wintoclient	dwm.c	/^wintoclient(Window w)$/;"	f	typeref:typename:Client *
wintomon	def.dwm.c	/^wintomon(Window w)$/;"	f	typeref:typename:Monitor *
wintomon	dwm.c	/^wintomon(Window w)$/;"	f	typeref:typename:Monitor *
wintype	dwm.c	/^	const char *wintype;$/;"	m	struct:__anon0f53a99e0d08	typeref:typename:const char *	file:
wmatom	def.dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
wmatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
wmcheckwin	def.dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
wmcheckwin	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
write_socket	patch/ipc/dwm-msg.c	/^write_socket(const void *buf, size_t count)$/;"	f	typeref:typename:ssize_t	file:
ww	def.dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
ww	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wx	def.dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wx	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wy	def.dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wy	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
x	def.dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
x	dwm.c	/^	int x, w; \/\/ position, width for internal use$/;"	m	struct:__anon0f53a99e0908	typeref:typename:int	file:
x	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
x	dwm.c	/^	int x;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:int	file:
x	dwm.c	/^	int x[BARRULES]; \/\/ x position, array length == ^$/;"	m	struct:Bar	typeref:typename:int[]	file:
xcon	def.dwm.c	/^static xcb_connection_t *xcon;$/;"	v	typeref:typename:xcb_connection_t *	file:
xcon	patch/swallow.c	/^static xcb_connection_t *xcon;$/;"	v	typeref:typename:xcb_connection_t *	file:
xerror	def.dwm.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerror	dwm.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrordummy	def.dwm.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrordummy	dwm.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorstart	def.dwm.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorstart	dwm.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorxlib	def.dwm.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xerrorxlib	dwm.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xfont	drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *
xfont_create	drw.c	/^xfont_create(Drw *drw, const char *fontname, FcPattern *fontpattern)$/;"	f	typeref:typename:Fnt *	file:
xfont_free	drw.c	/^xfont_free(Fnt *font)$/;"	f	typeref:typename:void	file:
xrdb	def.dwm.c	/^xrdb(const Arg *arg)$/;"	f	typeref:typename:void
xrdb	patch/xrdb.c	/^xrdb(const Arg *arg)$/;"	f	typeref:typename:void
y	def.dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
y	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
y	dwm.c	/^	int y;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:int	file:
zoom	def.dwm.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
zoom	dwm.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
